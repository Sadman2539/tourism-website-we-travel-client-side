{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport initializeAuthentication from \"../components/Firebase/firebase.init\";\nimport { getAuth, signInWithPopup, createUserWithEmailAndPassword, GoogleAuthProvider, GithubAuthProvider, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport SignUp from \"../components/SignUp/SignUp\";\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [user, setUser] = useState({});\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider();\n  const githubProvider = new GithubAuthProvider(); // CreateUser Using google Email & Password \n\n  const createUserUsingEmail = (email, password) => {\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      setUser(userCredential.user);\n    }).catch(error => {\n      setError(error.message);\n    });\n  }; // SignIn Using google provider \n\n\n  const signInUsingGoogle = () => {\n    setIsLoading(true);\n    signInWithPopup(auth, googleProvider).then(result => {\n      console.log(result.user);\n      console.log(result.user);\n    }).catch(error => {\n      setError(error.message);\n    }).finally(() => setIsLoading(false));\n  }; // handleLogin function call \n\n\n  const handleLogin = event => {\n    _s();\n\n    event.preventDefault();\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user;\n    }).catch(error => {\n      setError(error.message);\n    }); //Sign In using Github Provider\n\n    const signInUsingGithub = () => {\n      signInWithPopup(auth, githubProvider).then(result => {\n        console.log(result.user);\n        setUser(result.user);\n      }).catch(error => {\n        setError(error.message);\n      }).finally(() => setIsLoading(false));\n    }; // logout function call \n\n\n    const logout = () => {\n      setIsLoading(true);\n      signOut(auth).then(() => {\n        setUser({});\n      }).finally(() => setIsLoading(false));\n    }; // observe user state change \n\n\n    useEffect(() => {\n      const unsubscribed = onAuthStateChanged(auth, user => {\n        if (user) {\n          setUser(user);\n        } else {\n          setUser({});\n        }\n\n        setIsLoading(false);\n      });\n      return () => unsubscribed;\n    }, []);\n    return {\n      user,\n      error,\n      isLoading,\n      createUserUsingEmail,\n      signInUsingGoogle,\n      signInUsingGithub,\n      logout\n    };\n  };\n\n  _s(handleLogin, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n};\n\n_s2(useFirebase, \"nuAi9NMZqBzpptfvoUVEBpEYTb0=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["E:/Programming Hero/Projects/healthcare-related-website/src/Hooks/useFirebase.js"],"names":["useEffect","useState","initializeAuthentication","getAuth","signInWithPopup","createUserWithEmailAndPassword","GoogleAuthProvider","GithubAuthProvider","onAuthStateChanged","signOut","SignUp","useFirebase","user","setUser","error","setError","isLoading","setIsLoading","auth","googleProvider","githubProvider","createUserUsingEmail","email","password","then","userCredential","catch","message","signInUsingGoogle","result","console","log","finally","handleLogin","event","preventDefault","signInWithEmailAndPassword","signInUsingGithub","logout","unsubscribed"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport initializeAuthentication from \"../components/Firebase/firebase.init\";\r\nimport { getAuth, signInWithPopup, createUserWithEmailAndPassword, GoogleAuthProvider, GithubAuthProvider, onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport SignUp from \"../components/SignUp/SignUp\";\r\n\r\n\r\ninitializeAuthentication();\r\nconst useFirebase = () => {\r\n    const [user, setUser] = useState({});\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const auth = getAuth();\r\n    const googleProvider = new GoogleAuthProvider();\r\n    const githubProvider = new GithubAuthProvider();\r\n\r\n    // CreateUser Using google Email & Password \r\n    const createUserUsingEmail = (email, password) => {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(userCredential => {\r\n                setUser(userCredential.user)\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            })\r\n    }\r\n\r\n    // SignIn Using google provider \r\n    const signInUsingGoogle = () => {\r\n        setIsLoading(true);\r\n        signInWithPopup(auth, googleProvider)\r\n            .then(result => {\r\n                console.log(result.user);\r\n                console.log(result.user)\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n    // handleLogin function call \r\n    const handleLogin = (event) => {\r\n        event.preventDefault();\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                // Signed in \r\n                const user = userCredential.user;\r\n\r\n            })\r\n            .catch((error) => {\r\n                setError(error.message)\r\n            });\r\n        //Sign In using Github Provider\r\n        const signInUsingGithub = () => {\r\n            signInWithPopup(auth, githubProvider)\r\n                .then(result => {\r\n                    console.log(result.user);\r\n                    setUser(result.user)\r\n                })\r\n                .catch(error => {\r\n                    setError(error.message);\r\n                })\r\n                .finally(() => setIsLoading(false));\r\n        }\r\n        // logout function call \r\n        const logout = () => {\r\n            setIsLoading(true);\r\n            signOut(auth)\r\n                .then(() => {\r\n                    setUser({});\r\n                })\r\n                .finally(() => setIsLoading(false))\r\n        }\r\n        // observe user state change \r\n        useEffect(() => {\r\n            const unsubscribed = onAuthStateChanged(auth, user => {\r\n                if (user) {\r\n                    setUser(user)\r\n                }\r\n                else {\r\n                    setUser({});\r\n                }\r\n                setIsLoading(false)\r\n            });\r\n            return () => unsubscribed;\r\n        }, [])\r\n        return {\r\n            user,\r\n            error,\r\n            isLoading,\r\n            createUserUsingEmail,\r\n            signInUsingGoogle,\r\n            signInUsingGithub,\r\n            logout\r\n        }\r\n    }\r\n}\r\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}