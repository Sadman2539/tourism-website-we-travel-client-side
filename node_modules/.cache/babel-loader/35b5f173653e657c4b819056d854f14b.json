{"ast":null,"code":"import _slicedToArray from\"E:/Programming Hero/Projects/healthcare-related-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import initializeAuthentication from\"../components/Firebase/firebase.init\";import{getAuth,signInWithPopup,GoogleAuthProvider,GithubAuthProvider,onAuthStateChanged,signOut}from\"firebase/auth\";initializeAuthentication();var useFirebase=function useFirebase(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var auth=getAuth();var googleProvider=new GoogleAuthProvider();var githubProvider=new GithubAuthProvider();// SignIn Using google provider \nvar signInUsingGoogle=function signInUsingGoogle(){signInWithPopup(auth,googleProvider).then(function(result){console.log(result.user);setUser(result.user);}).catch(function(error){setError(error.message);});};//Sign In using Github Provider\nvar signInUsingGithub=function signInUsingGithub(){signInWithPopup(auth,githubProvider).then(function(result){console.log(result.user);setUser(result.user);}).catch(function(error){setError(error.message);});};// logout function call \nvar logout=function logout(){signOut(auth).then(function(){setUser({});});};useEffect(function(){onAuthStateChanged(auth,function(user){if(user){console.log(\"Inside state\");setUser(user);}});},[]);return{user:user,error:error,signInUsingGoogle:signInUsingGoogle,signInUsingGithub:signInUsingGithub,logout:logout};};export default useFirebase;","map":{"version":3,"sources":["E:/Programming Hero/Projects/healthcare-related-website/src/Hooks/useFirebase.js"],"names":["useEffect","useState","initializeAuthentication","getAuth","signInWithPopup","GoogleAuthProvider","GithubAuthProvider","onAuthStateChanged","signOut","useFirebase","user","setUser","error","setError","auth","googleProvider","githubProvider","signInUsingGoogle","then","result","console","log","catch","message","signInUsingGithub","logout"],"mappings":"0IAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,wBAAP,KAAqC,sCAArC,CACA,OAASC,OAAT,CAAkBC,eAAlB,CAAmCC,kBAAnC,CAAuDC,kBAAvD,CAA2EC,kBAA3E,CAA+FC,OAA/F,KAA8G,eAA9G,CAEAN,wBAAwB,GACxB,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,cAAwBR,QAAQ,CAAC,EAAD,CAAhC,wCAAOS,IAAP,eAAaC,OAAb,eACA,eAA0BV,QAAQ,CAAC,EAAD,CAAlC,yCAAOW,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,IAAI,CAAGX,OAAO,EAApB,CACA,GAAMY,CAAAA,cAAc,CAAG,GAAIV,CAAAA,kBAAJ,EAAvB,CACA,GAAMW,CAAAA,cAAc,CAAG,GAAIV,CAAAA,kBAAJ,EAAvB,CAEA;AACA,GAAMW,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5Bb,eAAe,CAACU,IAAD,CAAOC,cAAP,CAAf,CACKG,IADL,CACU,SAAAC,MAAM,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACT,IAAnB,EACAC,OAAO,CAACQ,MAAM,CAACT,IAAR,CAAP,CACH,CAJL,EAKKY,KALL,CAKW,SAAAV,KAAK,CAAI,CACZC,QAAQ,CAACD,KAAK,CAACW,OAAP,CAAR,CACH,CAPL,EAQH,CATD,CAWA;AACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5BpB,eAAe,CAACU,IAAD,CAAOE,cAAP,CAAf,CACKE,IADL,CACU,SAAAC,MAAM,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACT,IAAnB,EACAC,OAAO,CAACQ,MAAM,CAACT,IAAR,CAAP,CACH,CAJL,EAKKY,KALL,CAKW,SAAAV,KAAK,CAAI,CACZC,QAAQ,CAACD,KAAK,CAACW,OAAP,CAAR,CACH,CAPL,EAQH,CATD,CAUA;AACA,GAAME,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjBjB,OAAO,CAACM,IAAD,CAAP,CACKI,IADL,CACU,UAAM,CACRP,OAAO,CAAC,EAAD,CAAP,CACH,CAHL,EAIH,CALD,CAOAX,SAAS,CAAC,UAAM,CACZO,kBAAkB,CAACO,IAAD,CAAO,SAAAJ,IAAI,CAAI,CAC7B,GAAIA,IAAJ,CAAU,CACNU,OAAO,CAACC,GAAR,CAAY,cAAZ,EACAV,OAAO,CAACD,IAAD,CAAP,CACH,CACJ,CALiB,CAAlB,CAMH,CAPQ,CAON,EAPM,CAAT,CAQA,MAAO,CACHA,IAAI,CAAJA,IADG,CAEHE,KAAK,CAALA,KAFG,CAGHK,iBAAiB,CAAjBA,iBAHG,CAIHO,iBAAiB,CAAjBA,iBAJG,CAKHC,MAAM,CAANA,MALG,CAAP,CAOH,CAtDD,CAwDA,cAAehB,CAAAA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport initializeAuthentication from \"../components/Firebase/firebase.init\";\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider, GithubAuthProvider, onAuthStateChanged, signOut } from \"firebase/auth\";\r\n\r\ninitializeAuthentication();\r\nconst useFirebase = () => {\r\n    const [user, setUser] = useState({});\r\n    const [error, setError] = useState('');\r\n\r\n    const auth = getAuth();\r\n    const googleProvider = new GoogleAuthProvider();\r\n    const githubProvider = new GithubAuthProvider();\r\n\r\n    // SignIn Using google provider \r\n    const signInUsingGoogle = () => {\r\n        signInWithPopup(auth, googleProvider)\r\n            .then(result => {\r\n                console.log(result.user);\r\n                setUser(result.user)\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            })\r\n    }\r\n\r\n    //Sign In using Github Provider\r\n    const signInUsingGithub = () => {\r\n        signInWithPopup(auth, githubProvider)\r\n            .then(result => {\r\n                console.log(result.user);\r\n                setUser(result.user)\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            })\r\n    }\r\n    // logout function call \r\n    const logout = () => {\r\n        signOut(auth)\r\n            .then(() => {\r\n                setUser({});\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, user => {\r\n            if (user) {\r\n                console.log(\"Inside state\");\r\n                setUser(user)\r\n            }\r\n        })\r\n    }, [])\r\n    return {\r\n        user,\r\n        error,\r\n        signInUsingGoogle,\r\n        signInUsingGithub,\r\n        logout\r\n    }\r\n}\r\n\r\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}