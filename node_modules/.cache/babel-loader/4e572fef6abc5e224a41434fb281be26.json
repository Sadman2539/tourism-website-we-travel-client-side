{"ast":null,"code":"import _slicedToArray from\"E:/Programming Hero/Projects/healthcare-related-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import initializeAuthentication from\"../components/Firebase/firebase.init\";import{getAuth,signInWithPopup,createUserWithEmailAndPassword,GoogleAuthProvider,GithubAuthProvider,onAuthStateChanged,signOut,signInWithEmailAndPassword}from\"firebase/auth\";import SignUp from\"../components/SignUp/SignUp\";initializeAuthentication();var useFirebase=function useFirebase(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var auth=getAuth();var googleProvider=new GoogleAuthProvider();var githubProvider=new GithubAuthProvider();// CreateUser Using google Email & Password \nvar createUserUsingEmail=function createUserUsingEmail(name,email,password){console.log(email);createUserWithEmailAndPassword(auth,email,password).then(function(userCredential){console.log(userCredential.user);setUser(userCredential.user);}).catch(function(error){setError(error.message);});};// login Using google Email & Password \nvar loginUserUsingEmail=function loginUserUsingEmail(name,email,password){createUserWithEmailAndPassword(auth,email,password).then(function(userCredential){console.log(userCredential.user);setUser(userCredential.user);}).catch(function(error){setError(error.message);});};// SignIn Using google provider \nvar signInUsingGoogle=function signInUsingGoogle(){setIsLoading(true);signInWithPopup(auth,googleProvider).then(function(result){console.log(result.user);console.log(result.user);}).catch(function(error){setError(error.message);}).finally(function(){return setIsLoading(false);});};// loginWIthEmailPassword function call \nvar loginWIthEmailPassword=function loginWIthEmailPassword(email,password){signInWithEmailAndPassword(auth,email,password).then(function(userCredential){setUser(userCredential.user);}).catch(function(error){setError(error.message);});};//Sign In using Github Provider\nvar signInUsingGithub=function signInUsingGithub(){signInWithPopup(auth,githubProvider).then(function(result){console.log(result.user);setUser(result.user);}).catch(function(error){setError(error.message);}).finally(function(){return setIsLoading(false);});};// logout function call \nvar logout=function logout(){setIsLoading(true);signOut(auth).then(function(){setUser({});}).finally(function(){return setIsLoading(false);});};// observe user state change \nuseEffect(function(){var unsubscribed=onAuthStateChanged(auth,function(user){if(user){setUser(user);}else{setUser({});}setIsLoading(false);});return function(){return unsubscribed;};},[]);return{user:user,error:error,isLoading:isLoading,createUserUsingEmail:createUserUsingEmail,signInUsingGoogle:signInUsingGoogle,signInUsingGithub:signInUsingGithub,logout:logout,loginWIthEmailPassword:loginWIthEmailPassword};};export default useFirebase;","map":{"version":3,"sources":["E:/Programming Hero/Projects/healthcare-related-website/src/Hooks/useFirebase.js"],"names":["useEffect","useState","initializeAuthentication","getAuth","signInWithPopup","createUserWithEmailAndPassword","GoogleAuthProvider","GithubAuthProvider","onAuthStateChanged","signOut","signInWithEmailAndPassword","SignUp","useFirebase","user","setUser","error","setError","isLoading","setIsLoading","auth","googleProvider","githubProvider","createUserUsingEmail","name","email","password","console","log","then","userCredential","catch","message","loginUserUsingEmail","signInUsingGoogle","result","finally","loginWIthEmailPassword","signInUsingGithub","logout","unsubscribed"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport initializeAuthentication from \"../components/Firebase/firebase.init\";\r\nimport { getAuth, signInWithPopup, createUserWithEmailAndPassword, GoogleAuthProvider, GithubAuthProvider, onAuthStateChanged, signOut, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport SignUp from \"../components/SignUp/SignUp\";\r\n\r\n\r\ninitializeAuthentication();\r\nconst useFirebase = () => {\r\n    const [user, setUser] = useState({});\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const auth = getAuth();\r\n    const googleProvider = new GoogleAuthProvider();\r\n    const githubProvider = new GithubAuthProvider();\r\n\r\n    // CreateUser Using google Email & Password \r\n    const createUserUsingEmail = (name, email, password) => {\r\n        console.log(email);\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(userCredential => {\r\n                console.log(userCredential.user);\r\n                setUser(userCredential.user)\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            })\r\n    }\r\n    // login Using google Email & Password \r\n    const loginUserUsingEmail = (name, email, password) => {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(userCredential => {\r\n                console.log(userCredential.user);\r\n                setUser(userCredential.user)\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            })\r\n    }\r\n\r\n    // SignIn Using google provider \r\n    const signInUsingGoogle = () => {\r\n        setIsLoading(true);\r\n        signInWithPopup(auth, googleProvider)\r\n            .then(result => {\r\n                console.log(result.user);\r\n                console.log(result.user)\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n    // loginWIthEmailPassword function call \r\n    const loginWIthEmailPassword = (email, password) => {\r\n\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                setUser(userCredential.user);\r\n\r\n            })\r\n            .catch((error) => {\r\n                setError(error.message)\r\n            });\r\n    }\r\n    //Sign In using Github Provider\r\n    const signInUsingGithub = () => {\r\n        signInWithPopup(auth, githubProvider)\r\n            .then(result => {\r\n                console.log(result.user);\r\n                setUser(result.user)\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n    // logout function call \r\n    const logout = () => {\r\n        setIsLoading(true);\r\n        signOut(auth)\r\n            .then(() => {\r\n                setUser({});\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n    // observe user state change \r\n    useEffect(() => {\r\n        const unsubscribed = onAuthStateChanged(auth, user => {\r\n            if (user) {\r\n                setUser(user)\r\n            }\r\n            else {\r\n                setUser({});\r\n            }\r\n            setIsLoading(false)\r\n        });\r\n        return () => unsubscribed;\r\n    }, [])\r\n    return {\r\n        user,\r\n        error,\r\n        isLoading,\r\n        createUserUsingEmail,\r\n        signInUsingGoogle,\r\n        signInUsingGithub,\r\n        logout,\r\n        loginWIthEmailPassword\r\n    }\r\n}\r\n\r\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}