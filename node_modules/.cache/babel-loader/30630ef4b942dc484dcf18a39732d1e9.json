{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport initializeAuthentication from \"../components/Firebase/firebase.init\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, onAuthStateChanged } from \"firebase/auth\";\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [error, setError] = useState('');\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider();\n\n  const signInUsingGoogle = () => {\n    signInWithPopup(auth, googleProvider).then(result => {\n      console.log(result.user);\n      setUser(result.user);\n    }).catch(error => {\n      setError(error.message);\n    });\n  }; // logout function call \n\n\n  const logout = useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        console.log(\"Inside state\");\n        setUser(user);\n      }\n    });\n  }, []);\n  return {\n    user,\n    error,\n    signInUsingGoogle\n  };\n};\n\n_s(useFirebase, \"slXlqMGDPRZTnuGripuiKR50Vbc=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["E:/Programming Hero/Projects/healthcare-related-website/src/Hooks/useFirebase.js"],"names":["useEffect","useState","initializeAuthentication","getAuth","signInWithPopup","GoogleAuthProvider","onAuthStateChanged","useFirebase","user","setUser","error","setError","auth","googleProvider","signInUsingGoogle","then","result","console","log","catch","message","logout"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,wBAAP,MAAqC,sCAArC;AACA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,EAAuDC,kBAAvD,QAAiF,eAAjF;AAEAJ,wBAAwB;;AACxB,MAAMK,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMW,IAAI,GAAGT,OAAO,EAApB;AACA,QAAMU,cAAc,GAAG,IAAIR,kBAAJ,EAAvB;;AAEA,QAAMS,iBAAiB,GAAG,MAAM;AAC5BV,IAAAA,eAAe,CAACQ,IAAD,EAAOC,cAAP,CAAf,CACKE,IADL,CACUC,MAAM,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACR,IAAnB;AACAC,MAAAA,OAAO,CAACO,MAAM,CAACR,IAAR,CAAP;AACH,KAJL,EAKKW,KALL,CAKWT,KAAK,IAAI;AACZC,MAAAA,QAAQ,CAACD,KAAK,CAACU,OAAP,CAAR;AACH,KAPL;AAQH,GATD,CAPsB,CAkBtB;;;AACA,QAAMC,MAAM,GAERrB,SAAS,CAAC,MAAM;AACZM,IAAAA,kBAAkB,CAACM,IAAD,EAAOJ,IAAI,IAAI;AAC7B,UAAIA,IAAJ,EAAU;AACNS,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAT,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH;AACJ,KALiB,CAAlB;AAMH,GAPQ,EAON,EAPM,CAFb;AAUA,SAAO;AACHA,IAAAA,IADG;AAEHE,IAAAA,KAFG;AAGHI,IAAAA;AAHG,GAAP;AAKH,CAlCD;;GAAMP,W;;AAoCN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport initializeAuthentication from \"../components/Firebase/firebase.init\";\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider, onAuthStateChanged } from \"firebase/auth\";\r\n\r\ninitializeAuthentication();\r\nconst useFirebase = () => {\r\n    const [user, setUser] = useState({});\r\n    const [error, setError] = useState('');\r\n\r\n    const auth = getAuth();\r\n    const googleProvider = new GoogleAuthProvider();\r\n\r\n    const signInUsingGoogle = () => {\r\n        signInWithPopup(auth, googleProvider)\r\n            .then(result => {\r\n                console.log(result.user);\r\n                setUser(result.user)\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            })\r\n    }\r\n\r\n    // logout function call \r\n    const logout =\r\n\r\n        useEffect(() => {\r\n            onAuthStateChanged(auth, user => {\r\n                if (user) {\r\n                    console.log(\"Inside state\");\r\n                    setUser(user)\r\n                }\r\n            })\r\n        }, [])\r\n    return {\r\n        user,\r\n        error,\r\n        signInUsingGoogle\r\n    }\r\n}\r\n\r\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}